<!DOCTYPE HTML><META charset=UTF-8><TITLE>Prefix free:Break free from CSS vendor prefix hell!</TITLE>
<LINK rel=stylesheet href=css/style.css>
<LINK rel=stylesheet href=css/print.css media=print>
<LINK rel="shortcut icon" href=img/favicon.png>
<SCRIPT src=stylefix.js></SCRIPT>
<SCRIPT src=prefixfree.js></SCRIPT>
<STYLE>
@media all
{
	body
	{
		transform:none; /* Just to test embedded styles */
	}
}
</STYLE>
<HGROUP>
	<H1>-prefix-free</H1>
	<H2>Break free from CSS prefix hell!</H2>
</HGROUP>

<A
	href=https://raw.github.com/LeaVerou/prefixfree/master/prefixfree.min.js
	class=download
	title="Click to download"
	>
	<SPAN>Only </SPAN>
	<STRONG>2KB</STRONG>
	<SPAN> gzipped</SPAN>
</A>
<A
	href=https://github.com/LeaVerou/prefixfree
	target=_blank
	class=github-ribbon
	>
	<IMG
		src=https://a248.e.akamai.net/assets.github.com/img/71eeaab9d563c2b3c590319b398dd35683265e85/687474703a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67
		alt="Fork me on GitHub"
	>
</A>
<P id=wtf>
	<STRONG>-prefix-free</STRONG>
	<SPAN> lets you use only unprefixed CSS properties everywhere.
	It works behind the scenes,adding the current browser’s prefix to any CSS code,only when it’s needed.
	</SPAN>

<NAV><SPAN>Learn more:</SPAN>
	<UL>
		<LI>
			<A
				href=#
				>
				<SPAN>Home</SPAN>
			</A>
		<LI>
			<A
				href=#test-drive
				>
				<SPAN>Test drive</SPAN>
			</A>
		<LI>
			<A
				href=#faq
				>
				<SPAN>FAQ</SPAN>
			</A>
		<LI>
			<A
				href=#plugins
				>
				<SPAN>Plugins</SPAN>
			</A>
	</UL>
</NAV>

<BLOCKQUOTE
	cite=http://twitter.com/#!/meyerweb/status/124618575263711232
	>
	<P>[-prefix-free is] fantastic,top-notch work! Thank you for creating and sharing it.
	<SPAN>—</SPAN>
	<A
		href=http://twitter.com/#!/meyerweb/status/124618575263711232
		target=_blank
		>
		<SPAN>Eric Meyer</SPAN>
	</A>
</BLOCKQUOTE>

<DIV class=section-container>
	<SECTION id=features>
		<H1>Features</H1>
		<UL class=features>
			<LI>
				<DIV>Processes every stylesheet in <CODE>&lt;link&gt;</CODE> or <CODE>&lt;style&gt;</CODE> elements and adds a vendor prefix where needed
				</DIV>
			<LI>
				<DIV>Processes elements with a <CODE>style</CODE> attribute and adds a vendor prefix where needed
				</DIV>
			<LI>
				<DIV>Takes care of <STRONG>new</STRONG> <CODE>&lt;link&gt;</CODE> or <CODE>&lt;style&gt;</CODE> elements,<CODE>style</CODE> attribute changes and CSSOM changes (<A href=#dynamic-dom">requires plugin</A>)
				</DIV>
			<LI>
				<DIV>
					<SPAN>Lets </SPAN>
					<STRONG>jQuery</STRONG>
					<SPAN>’s </SPAN>
					<CODE>.css()</CODE>
					<SPAN> method get and set unprefixed properties </SPAN>
					<SPAN>(</SPAN>
					<A href=#jquery">requires plugin</A>
					<SPAN>)</SPAN>
				</DIV>
		</UL>
	</SECTION>
<SECTION id=limitations>
	<H1>Limitations</H1>
	<UL class=drawbacks>
		<LI>
			<DIV>
				<SPAN>Prefixing code in </SPAN>
				<CODE>@import</CODE>
				<SPAN>-ed files is not supported</SPAN>
			</DIV>
		<LI>
			<DIV>
				<SPAN>Prefixing </SPAN>
				<STRONG>cross-origin</STRONG>
				<SPAN> linked stylesheets is not supported</SPAN>
			</DIV>
		<LI>
			<DIV>
				<SPAN>Unprefixed linked stylesheets won’t work </SPAN>
				<STRONG>locally</STRONG>
				<SPAN> in Chrome and Opera. </SPAN>
				<A
					href=#local-xhr
					>
					<SPAN>You can change that for yourself</SPAN>
				</A>
				<SPAN> though.</SPAN>
			</DIV>
		<LI>
			<DIV>
				<SPAN>Unprefixed </SPAN>
				<STRONG>values</STRONG>
				<SPAN> in inline styles </SPAN>
				<SPAN>(</SPAN>
				<SPAN>in the </SPAN>
				<CODE>style</CODE><SPAN> attribute</SPAN>
				<SPAN>)</SPAN>
				<SPAN> won’t work in IE and Firefox &lt; 3.6. </SPAN>
				<STRONG>Properties</STRONG>
				<SPAN> as well in Firefox &lt; 3.6.</SPAN>
			</DIV>
	</UL>
</SECTION>
</DIV>

<DIV class=section-container>
<SECTION id=demo>
	<H1>Demo?</H1>
	<P>
		<DIV>
			<SPAN>Check </SPAN>
			<A href=css/style.css>this page’s stylesheet</A>
			<SPAN> ;-)</SPAN>
		</DIV>
	<P>
		<DIV>
			<SPAN>You can also visit the </SPAN>
			<A href=#test-drive>Test Drive</A>
			<SPAN> page,type in any code you want and check out how it would get prefixed for the current browser.</SPAN>
		</DIV>
</SECTION>
<SECTION id=howto>
	<H1>How to use</H1>
	<P>
		<DIV>
			<SPAN>Just include </SPAN>
			<CODE>prefixfree.js</CODE>
			<SPAN> anywhere in your page. It is recommended to put it right after the stylesheets,to minimize </SPAN>
			<ABBR title="Flash Of UnCSS3-ed Content">FOUC</ABBR>
		</DIV>
	<P>
		<DIV>
			<SPAN>That’s it,you’re done!</SPAN>
		</DIV>
</SECTION>
</DIV>

<SECTION id=browser-support>
	<H1>Browser support</H1>
	<P>
		<DIV>
			<SPAN>The target browser support is </SPAN>
			<STRONG>IE9+</STRONG>
			<SPAN>,</SPAN>
			<STRONG>Opera 10+</STRONG>
			<SPAN>,</SPAN>
			<STRONG>Firefox 3.5+</STRONG>
			<SPAN>,</SPAN>
			<STRONG>Safari 4+</STRONG>
			<SPAN> and </SPAN>
			<STRONG>Chrome</STRONG>
			<SPAN>.</SPAN>
		</DIV>
	<P>
		<DIV>
			<SPAN>If it doesn’t work in any of those,it’s a bug so please report it. Just before you do,please make sure that it’s not because the browser doesn’t support a CSS3 feature at all,even with a prefix.
			</SPAN>
		</DIV>
	<P>
		<DIV>
			<SPAN>In older browsers like IE8,nothing will break,just properties won’t get prefixed. Which wouldn’t be useful anyway as IE8 doesn’t support much CSS3 ;)</SPAN>
		</DIV>
</SECTION>

<SECTION
	id=test-drive
	class=page
	>
	<H1>Test Drive</H1>
	<P>
		<DIV>
			<SPAN>Test the prefixing that -prefix-free would do for this browser,by writing some CSS below:
			</SPAN>
		</DIV>
	<TEXTAREA
		id=source
		>
		@keyframes rotate
		{
			from
			{
				transform:rotate(15deg)
			}
			to
			{
				transform:rotate(375deg)
			}
		}

		.download
		{
			position:absolute
		;
			top:1em
		;
			left:-1.5em
		;
			width:6em
		;
			height:6em
		;
			padding:1em 0
		;
			background:#80A060
		;
			background-image:linear-gradient(transparent,rgba(10,0,0,.3))
		;
			color:white
		;
			line-height:1
		;
			font-size:140%
		;
			text-align:center
		;
			text-decoration:initial
		;
			text-shadow:.08em .08em .2em rgba(0,0,0,.6)
		;
			border-radius:50%
		;
			box-shadow:.1em .2em .4em -.2em black
		;
			box-sizing:border-box
		;
			transform:rotate(15deg)
		;
			animation:rotate
		;
			cursor:zoom-in
		}

		:read-write
		{
			/**/
		}
	</TEXTAREA>
	<TEXTAREA id=prefixed READONLY></TEXTAREA>
</SECTION>
<SECTION
	id=faq
	class=page
	>
	<H1>FAQ</H1>
	<SECTION>
		<H1>What if I actually want to target only a specific prefix?</H1>
		<P>Properties/values etc that <STRONG>already</STRONG> have a prefix won’t be altered. However,if you use the unprefixed property/value etc after the prefixed properties,you might run into
			<A
				href=https://github.com/LeaVerou/prefixfree/issues/16#issuecomment-2428237
				target=_blank
				>issue #16
			</A>.
		For those cases,-prefix-free adds a class on the root element (the <CODE>&lt;html&gt;</CODE> element in HTML) with the same name as the current prefix. So for example,to solve the problem presented in the above issue,you could do:
		<PRE>
			.myselector
			{
				transform:rotate(15deg)
			}
			.-webkit- .myselector
			{
				transform:rotate(15deg) rotateX(0)
			}
		</PRE>
		<P>It’t not ideal,but it’s a solution,until a more intuitive way to deal with these cases is added in -prefix-free.
		<P>Please note that in unsupported browsers like IE8,no such class will be added.
	</SECTION>
	
	<SECTION id=local-xhr>
		<H1>How do I enable local testing?</H1>
		<P>Firefox (and IE?) natively support local XHR,so -prefix-free will work fine locally with them.
		<P>To enable local XHR for <STRONG>Chrome</STRONG>,you need to run it with the flag <CODE>--allow-file-access-from-files</CODE>.
		<P>To enable local XHR for <STRONG>Opera</STRONG>,you have to go to <A href=opera:config#UserPrefs|AllowFileXMLHttpRequest">opera:config#UserPrefs|AllowFileXMLHttpRequest</A>,check that option and Save.
	</SECTION>
	
	<SECTION>
		<H1>Something like this belongs to the server-side</H1>
		<P>A server side script would need to add all prefixes,making the size of the CSS file considerably larger. Also,it should maintain a list of features that need prefixes,or add them all and unnecessarily bloat the stylesheet. -prefix-free automatically detects what needs a prefix and what doesn’t.
		<P>Also,a common argument against doing this on the client side,is that it makes the design rely on JavaScript. However,that is completely false:If JS is disabled,only some of the CSS3 won’t show. But if your design <em>relies</em> on CSS3 to be functional,you have bigger problems bro.
		<P>You can read some more about this in my recent <A href=http://css-tricks.com/14792-five-questions-with-lea-verou/#lea-question-2">CSS Tricks interview</A>
		<P>But every solution has its own pros and cons. If you would feel more comfortable with a server-side script,use that and don’t troll me please. Remember:nobody forced you to use -prefix-free. <STRONG>KTHXBAI ☺</STRONG>
	</SECTION>
</SECTION>
<SECTION
	id=plugins
	class=page
	>
	<H1>Plugins</H1>
	<P>Extra code on top of -prefix-free that makes it more flexible,integrates it with different APIs etc
	<SECTION id=dynamic-dom>
		<H1>Dynamic DOM plugin</H1>
		<P>Originally a part of -prefix-free,it’s now a separate plugin. It makes -prefix-free take care of:
		<UL class=features>
			<LI>
				<DIV>
					<STRONG>New</STRONG> <CODE>&lt;link&gt;</CODE> and <CODE>&lt;style&gt;</CODE> added to the document afterwards
				</DIV>
			<LI>
				<DIV>
					<STRONG>New</STRONG> elements with a <CODE>style</CODE> attribute added to the document afterwards
				</DIV>
			<LI>
				<DIV>
					<CODE>style</CODE> attribute changes through <CODE>setAttribute()</CODE> (except in Webkit)
				</DIV>
			<LI>
				<DIV>Getting and setting unprefixed properties through the CSSOM,like:
				</DIV>
				<DIV>
					<PRE>element.style.transform='rotate(10deg)';</PRE>
				</DIV>
		</UL>
		<SPAN>Things to be aware of:</SPAN>
		<UL class=drawbacks>
			<LI>
				<DIV>Mutation events have a reputation of being slow,and they are the only way to do stuff when an attribute changes or new elements get added
				</DIV>
			<LI>
				<DIV>
					<CODE>style</CODE> attribute modifications will not work in Webkit
				</DIV>
			<LI>
				<DIV>
					<EM>Setting</EM> unprefixed CSSOM properties,like:
				</DIV>
				<DIV>
					<PRE>element.style.transform='rotate(5deg)';</PRE>
				will not work in Chrome (<EM>reading</EM> will)
				</DIV>
		</UL>
		<P>
			<SPAN>Get the Dynamic DOM plugin now:</SPAN>
		<UL>
			<LI>
				<A
					href=https://raw.github.com/LeaVerou/prefixfree/master/plugins/prefixfree.dynamic-dom.js
					>prefixfree.dynamic-dom.js
				</A>
			<LI>
				<A
					href=https://raw.github.com/LeaVerou/prefixfree/master/plugins/prefixfree.dynamic-dom.min.js
					>prefixfree.dynamic-dom.min.js
				</A>
		</UL>
	</SECTION>
	
	<SECTION id=jquery>
		<H1>jQuery plugin</H1>
		<P>
			<SPAN>A tiny plugin (I didn’t even bother minifying it as it’s so small) that lets you set/get unprefixed CSS properties through jQuery's <CODE>.css</CODE> method.
			</SPAN>
		<P>
			<SPAN>Get the jQuery plugin now:</SPAN>
		<UL>
			<LI>
				<A
					href=https://raw.github.com/LeaVerou/prefixfree/master/plugins/prefixfree.jquery.js
					>prefixfree.jquery.js
				</A>
		</UL>
	</SECTION>
</SECTION>

<FOOTER>
	<A
		href=http://twitter.com/prefixfree"
		target=_blank
		>@prefixfree
	</A>
	<SPAN>✿</SPAN>
	<A
		href=https://github.com/LeaVerou/prefixfree/commits/master.atom
		target=_blank
		>Commits feed
	</A>
	<SPAN>✿ Made by </SPAN>
	<A
		href=http://lea.verou.me/
		>Lea Verou
	</A>
	 with care
</FOOTER>

<SCRIPT src=index.js></SCRIPT>

<A
	href=http://twitter.com/share
	class=twitter-share-button
	data-count=vertical
	data-via=prefixfree
	data-related=LeaVerou
	>Tweet
</A>
<SCRIPT src=http://platform.twitter.com/widgets.js></SCRIPT>
<SCRIPT>var _gaq
=
[
	[
		'_setAccount'
	,
		'UA-25106441-4'
	]
,
	[
		'_trackPageview'
	]
]
</SCRIPT>
<SCRIPT src=http://www.google-analytics.com/ga.js ASYNC></SCRIPT>

</body>
</html>
